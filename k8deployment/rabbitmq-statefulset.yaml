apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: rabbitmq
  namespace: default
spec:
  serviceName: "rabbitmq-headless"
  replicas: 3
  selector:
    matchLabels:
      app: rabbitmq
  template:
    metadata:
      labels:
        app: rabbitmq
    spec:
      containers:
        - name: rabbitmq
          image: rabbitmq:3.13.2-management
          env:
            - name: RABBITMQ_ERLANG_COOKIE
              valueFrom:
                configMapKeyRef:
                  name: rabbitmq-config
                  key: RABBITMQ_ERLANG_COOKIE
            - name: RABBITMQ_DEFAULT_USER
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-secret
                  key: RABBITMQ_DEFAULT_USER
            - name: RABBITMQ_DEFAULT_PASS
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-secret
                  key: RABBITMQ_DEFAULT_PASS
          ports:
            - containerPort: 5672
              name: amqp
            - containerPort: 15672
              name: management
          volumeMounts:
            - name: rabbitmq-data
              mountPath: /var/lib/rabbitmq
          command:
            [
              "/bin/sh",
              "-c",
              "rabbitmq-server & sleep 30 && rabbitmqctl stop_app && rabbitmqctl reset && if [ $(hostname -s) != rabbitmq-0 ]; then rabbitmqctl join_cluster rabbit@rabbitmq-0.rabbitmq-headless.default.svc.cluster.local; fi && rabbitmqctl start_app && tail -f /dev/null",
            ]
  volumeClaimTemplates:
    - metadata:
        name: rabbitmq-data
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 10Gi
