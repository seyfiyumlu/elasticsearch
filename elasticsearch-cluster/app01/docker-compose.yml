version: '3.8'

volumes:
  elasticsearch-data:
  elasticsearch-data-1:
  elasticsearch-data-2:
  kibanadata:

networks:
  elasticsearch-net:
    driver: overlay  # Overlay network, multi-host communication sağlar.

services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.5.2
    deploy:
      mode: replicated
      replicas: 3  # 3 node’luk bir cluster oluşturur.
    environment:
      - cluster.name=docker-cluster
      - node.name=elasticsearch-${HOSTNAME}
      - discovery.seed_hosts=elasticsearch_elasticsearch.1,elasticsearch_elasticsearch.2,elasticsearch_elasticsearch.3
      - cluster.initial_master_nodes=elasticsearch_elasticsearch.1,elasticsearch_elasticsearch.2,elasticsearch_elasticsearch.3
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - bootstrap.memory_lock=true
      - xpack.security.enabled=false
      - xpack.security.http.ssl.enabled=false
      - xpack.license.self_generated.type=basic
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    networks:
      - elasticsearch-net
    ulimits:
      memlock:
        soft: -1
        hard: -1
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200 || exit 1"]
      interval: 10s
      timeout: 10s
      retries: 120

  kibana:
    image: docker.elastic.co/kibana/kibana:7.5.2
    deploy:
      mode: replicated
      replicas: 1  
      placement:
        constraints: [node.role == worker] 
    environment:
      - SERVERNAME=kibana
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"
    volumes:
      - kibanadata:/usr/share/kibana/data
    networks:
      - elasticsearch-net
    healthcheck:
      test: ["CMD-SHELL", "curl -s -I http://localhost:5601 | grep -q 'HTTP/1.1 302 Found'"]
      interval: 10s
      timeout: 10s
      retries: 120
