apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-cluster-config
  namespace: {{ .Values.namespace }}
data:
  redis.conf: |
    bind 0.0.0.0
    protected-mode yes
    port 6379
    tcp-backlog 511
    timeout 0
    tcp-keepalive 300
    daemonize no
    supervised no
    pidfile /var/run/redis_6379.pid
    loglevel notice
    logfile ""
    databases 16
    always-show-logo yes
    save 900 1
    save 300 10
    save 60 10000
    stop-writes-on-bgsave-error yes
    rdbcompression yes
    rdbchecksum yes
    dbfilename dump.rdb
    dir ./
    requirepass ServicePassword
    rename-command FLUSHDB ""
    rename-command FLUSHALL ""
    rename-command CONFIG ""
    rename-command SHUTDOWN ""
    rename-command BGREWRITEAOF ""
    rename-command BGSAVE ""
    rename-command SAVE ""
    rename-command RESTORE ""
    rename-command MIGRATE ""
    rename-command DUMP ""
    rename-command DEBUG ""
    rename-command OBJECT ""
    rename-command MONITOR ""
    rename-command SLAVEOF ""
    rename-command REPLICAOF ""
    rename-command ROLE ""
    rename-command PUBLISH ""
    rename-command PUBSUB ""
    rename-command SCRIPT ""
    rename-command SLOWLOG ""
    rename-command SYNC ""
    rename-command PSYNC ""
    rename-command CLIENT ""
    rename-command CLUSTER ""
    rename-command INFO ""
    rename-command MEMORY ""
    rename-command LATENCY ""
    rename-command ACL ""

---

apiVersion: v1
kind: PersistentVolume
metadata:
  name: redis-cluster-pv
  namespace: {{ .Values.namespace }}
spec:
  capacity:
    storage: {{ .Values.persistence.size }}
  accessModes:
    - {{ .Values.persistence.accessMode }}
  hostPath:
    path: /mnt/data
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: redis-cluster-pvc
  namespace: {{ .Values.namespace }}
spec:
  accessModes:
    - {{ .Values.persistence.accessMode }}
  resources:
    requests:
      storage: {{ .Values.persistence.size }}

---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis-cluster
  namespace: {{ .Values.namespace }}
spec:
  serviceName: "redis-cluster"
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: redis-cluster
  template:
    metadata:
      labels:
        app: redis-cluster
    spec:
      containers:
        - name: redis-cluster
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          ports:
            - containerPort: 6379
          volumeMounts:
            - name: redis-cluster-data
              mountPath: /data
            - name: redis-cluster-config
              mountPath: /usr/local/etc/redis/redis.conf
              subPath: redis.conf
          command: ["redis-server", "/usr/local/etc/redis/redis.conf", "--cluster-enabled", "yes", "--appendonly", "yes"]
  volumeClaimTemplates:
    - metadata:
        name: redis-cluster-data
        namespace: {{ .Values.namespace }}
      spec:
        accessModes: [ "{{ .Values.persistence.accessMode }}" ]
        resources:
          requests:
            storage: "{{ .Values.persistence.size }}"
      volumes:
        - name: redis-cluster-config
          configMap:
            name: redis-cluster-config

---

apiVersion: v1
kind: Service
metadata:
  name: redis-cluster
  namespace: {{ .Values.namespace }}
spec:
  ports:
    - port: 6379
      name: redis-cluster
  clusterIP: None
  selector:
    app: redis-cluster

