apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-cluster-config
  namespace: {{ .Values.namespace }}
data:
  redis.conf: |
    bind 0.0.0.0
    protected-mode yes
    port 6379
    tcp-backlog 511
    timeout 0
    tcp-keepalive 300
    daemonize no
    supervised no
    pidfile /var/run/redis_6379.pid
    loglevel notice
    logfile ""
    databases 16
    always-show-logo yes
    save 900 1
    save 300 10
    save 60 10000
    stop-writes-on-bgsave-error yes
    rdbcompression yes
    rdbchecksum yes
    dbfilename dump.rdb
    dir ./
    requirepass ServicePassword
    rename-command FLUSHDB ""
    rename-command FLUSHALL ""
    rename-command CONFIG ""
    rename-command SHUTDOWN ""
    rename-command BGREWRITEAOF ""
    rename-command BGSAVE ""
    rename-command SAVE ""
    rename-command RESTORE ""
    rename-command MIGRATE ""
    rename-command DUMP ""
    rename-command DEBUG ""
    rename-command OBJECT ""
    rename-command MONITOR ""
    rename-command SLAVEOF ""
    rename-command REPLICAOF ""
    rename-command ROLE ""
    rename-command PUBLISH ""
    rename-command PUBSUB ""
    rename-command SCRIPT ""
    rename-command SLOWLOG ""
    rename-command SYNC ""
    rename-command PSYNC ""
    rename-command CLIENT ""
    rename-command CLUSTER ""
    rename-command INFO ""
    rename-command MEMORY ""
    rename-command LATENCY ""
    rename-command ACL ""
---

apiVersion: v1
kind: ConfigMap
metadata:
  name: local-provisioner-config
  namespace: kube-system
data:
  storageClassMap: |
    local-storage:
      hostDir: /mnt/disks
      mountDir: /mnt/disks
      blockCleanerCommand:
        - "/scripts/shred.sh"
        - "2"
      volumeMode: Filesystem
      fsType: ext4
      recycler:
        command:
          - "/scripts/shred.sh"
          - "2"
        timeout: 60
      storageClassName: local-storage

---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: {{ .Values.persistence.storageClass }}
provisioner: kubernetes.io/no-provisioner
volumeBindingMode: WaitForFirstConsumer


---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: local-volume-provisioner
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app: local-volume-provisioner
  template:
    metadata:
      labels:
        app: local-volume-provisioner
    spec:
      containers:
      - name: provisioner
        image: quay.io/external_storage/local-volume-provisioner:latest
        volumeMounts:
        - mountPath: /mnt/disks
          name: local-disks
        - mountPath: /etc/provisioner/config/storageClassMap
          name: provisioner-config
          subPath: storageClassMap  # subPath ile ConfigMap içindeki dosyayı belirtiyoruz
      volumes:
      - name: local-disks
        hostPath:
          path: /mnt/disks
      - name: provisioner-config
        configMap:
          name: local-provisioner-config


---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis-cluster
  namespace: {{ .Values.namespace }}
spec:
  serviceName: "redis-cluster"
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: redis-cluster
  template:
    metadata:
      labels:
        app: redis-cluster
    spec:
      containers:
      - name: redis-cluster
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        ports:
        - containerPort: 6379
        volumeMounts:
        - name: redis-storage
          mountPath: /data
        - name: redis-cluster-config
          mountPath: /usr/local/etc/redis/redis.conf
          subPath: redis.conf
        command: ["redis-server", "/usr/local/etc/redis/redis.conf", "--cluster-enabled", "yes", "--appendonly", "yes"]
      volumes:
      - name: redis-cluster-config
        configMap:
          name: redis-cluster-config
  volumeClaimTemplates:
    - metadata:
        name: redis-storage
      spec:
        storageClassName: "{{ .Values.persistence.storageClass }}"
        accessModes: [ "{{ .Values.persistence.accessMode }}" ]
        resources:
          requests:
            storage: "{{ .Values.persistence.size }}"

---

apiVersion: v1
kind: Service
metadata:
  name: redis-cluster
  namespace: {{ .Values.namespace }}
spec:
  ports:
    - port: 6379
      name: redis-cluster
  clusterIP: None
  selector:
    app: redis-cluster